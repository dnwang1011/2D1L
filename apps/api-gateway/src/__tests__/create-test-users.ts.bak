import dotenv from 'dotenv';
import path from 'path';

// Load environment variables from the root .env file
dotenv.config({ path: path.resolve(__dirname, '../../../../.env') });

import { DatabaseService, UserRepository } from '@2dots1line/database';
import bcrypt from 'bcryptjs';

async function createTestUsers() {
  console.log('🚀 Creating API test users...');
  
  const databaseService = new DatabaseService();
  const userRepository = new UserRepository(databaseService);

  const testUsers = [
    {
      name: 'API Test User',
      email: 'apitest@2dots1line.com',
      username: 'apitestuser',
      password_hash: await bcrypt.hash('SecurePassword123!', 10),
      region: 'US-WEST',
    },
    {
      name: 'Login Test User',
      email: 'logintest@2dots1line.com',
      username: 'logintestuser',
      password_hash: await bcrypt.hash('LoginPassword123!', 10),
      region: 'ASIA-PACIFIC',
    },
    {
      name: 'Me Endpoint Test User',
      email: 'metest@2dots1line.com',
      username: 'metestuser',
      password_hash: await bcrypt.hash('MeTestPassword123!', 10),
      region: 'EU-WEST',
    }
  ];

  try {
    for (const userData of testUsers) {
      const user = await userRepository.createUser(userData);
      console.log(`✅ Created API test user: ${user.name} (${user.email}) - ID: ${user.user_id}`);
    }

    console.log('🎉 Successfully created all API test users!');
    console.log('📊 You can now view these users in Prisma Studio at: http://localhost:5556');
    console.log('📝 Navigate to the "users" table to see all test data');

  } catch (error) {
    console.error('❌ Error creating test users:', error);
  } finally {
    await databaseService.disconnect();
  }
}

// Run if called directly
if (require.main === module) {
  createTestUsers().catch(console.error);
}

export { createTestUsers }; 